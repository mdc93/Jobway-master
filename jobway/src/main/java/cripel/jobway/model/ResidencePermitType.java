package cripel.jobway.model;
// Generated Feb 25, 2022, 8:26:41 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Residencepermittype generated by hbm2java
 */
@Entity
@Table(name = "residencepermittype", catalog = "jobway")
public class ResidencePermitType {

	private Integer idResidencePermitType;
	private String residencePermitTypeName;
	private boolean residencePermitNeedAnnex;
	private boolean isDelete;
	private Set<ResidencePermit> residencepermits = new HashSet<>(0);

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idResidencePermitType", unique = true, nullable = false)
	public Integer getIdResidencePermitType() {
		return this.idResidencePermitType;
	}

	public void setIdResidencePermitType(Integer idResidencePermitType) {
		this.idResidencePermitType = idResidencePermitType;
	}

	@Column(name = "residencePermitTypeName", nullable = false, length = 50)
	public String getResidencePermitTypeName() {
		return this.residencePermitTypeName;
	}

	public void setResidencePermitTypeName(String residencePermitTypeName) {
		this.residencePermitTypeName = residencePermitTypeName;
	}

	@Column(name = "isDelete", nullable = false)
	public boolean isDelete() {
		return isDelete;
	}

	public void setDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	/**
	 * @return the residencePermitNeedAnnex
	 */
	@Column(name = "residencePermitNeedAnnex", nullable = false)
	public boolean isResidencePermitNeedAnnex() {
		return residencePermitNeedAnnex;
	}

	/**
	 * @param residencePermitNeedAnnex the residencePermitNeedAnnex to set
	 */
	public void setResidencePermitNeedAnnex(boolean residencePermitNeedAnnex) {
		this.residencePermitNeedAnnex = residencePermitNeedAnnex;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "residencepermittype")
	public Set<ResidencePermit> getResidencepermits() {
		return this.residencepermits;
	}

	public void setResidencepermits(Set<ResidencePermit> residencepermits) {
		this.residencepermits = residencepermits;
	}

	@Override
	public String toString() {
		return this.residencePermitTypeName;
	}

}
