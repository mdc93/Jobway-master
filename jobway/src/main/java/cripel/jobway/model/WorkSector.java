package cripel.jobway.model;
// Generated Feb 25, 2022, 8:26:41 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Worksector generated by hbm2java
 */
@Entity
@Table(name = "worksector", catalog = "jobway")
public class WorkSector {

	private Integer idWorkSector;
	private String workSectorName;
	private boolean isDelete;
	private Set<SkilSect> skilSects = new HashSet<>(0);
	private Set<WorkSearch> worksearches = new HashSet<>(0);

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idWorkSector", unique = true, nullable = false)
	public Integer getIdWorkSector() {
		return this.idWorkSector;
	}

	public void setIdWorkSector(Integer idWorkSector) {
		this.idWorkSector = idWorkSector;
	}

	@Column(name = "workSectorName", nullable = false, length = 50)
	public String getWorkSectorName() {
		return this.workSectorName;
	}

	public void setWorkSectorName(String workSectorName) {
		this.workSectorName = workSectorName;
	}

	@Column(name = "isDelete", nullable = false)
	public boolean isDelete() {
		return isDelete;
	}

	public void setDelete(boolean isDelete) {
		this.isDelete = isDelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "worksector")
	public Set<SkilSect> getSkilSects() {
		return this.skilSects;
	}

	public void setSkilSects(Set<SkilSect> skilSects) {
		this.skilSects = skilSects;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "workSectors")
	public Set<WorkSearch> getWorksearches() {
		return this.worksearches;
	}

	public void setWorksearches(Set<WorkSearch> worksearches) {
		this.worksearches = worksearches;
	}

	@Override
	public String toString() {
		return this.workSectorName;
	}

	@Override
	public int hashCode() {
		return Objects.hash(workSectorName);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if ((obj == null) || (getClass() != obj.getClass()))
			return false;
		WorkSector other = (WorkSector) obj;
		return Objects.equals(workSectorName, other.workSectorName);
	}

}
